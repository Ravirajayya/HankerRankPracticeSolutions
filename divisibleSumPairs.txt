Given an array of integers and a positive integer K, determine the number of (i,j) pairs where i<j and arr[i] + arr[j] is divisible by k.

Example: 
ar = [1, 2, 3, 4, 5, 6]
k = 5

Three pairs meet the criteria: [1,4] [2,3] and [4, 6] hence answer is 3.

public class DivisibleSumPairs {

    // Complete the divisibleSumPairs function below.
    static int divisibleSumPairs(int n, int k, int[] ar) 
    {
        int res = 0;
        for(int i = 0; i < n; i++)
            for(int j = 0; j < i; j++)
                if((ar[i]+ar[j])%k == 0)
                    res++;
        return res;
    }
	private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nk = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nk[0]);

        int k = Integer.parseInt(nk[1]);

        int[] ar = new int[n];

        String[] arItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arItem = Integer.parseInt(arItems[i]);
            ar[i] = arItem;
        }

        int result = divisibleSumPairs(n, k, ar);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}